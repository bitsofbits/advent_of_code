# Starting: a = 1, b-h = 0
# A stays 1 at 1 throught

set b 79
set c b
jnz a 2
jnz 1 5
mul b 100
sub b -100000  # b += 100_000 => 107_900
set c b
sub c -17000  # c = b + 17_000 = 124_900  Output appears linear id inc / 17

set f 1    # LOOP

set d 2
set e 2    # C
set g d    # B d => (2, 3, 4, ...)
mul g e    # e => (2, 3, 4) => 4, 3, 0
sub g b    # => g - 107_900 + ...
jnz g 2    # JNZ g, A
set f 0    # Happens when d * e == b --> b not prime
sub e -1   # A  e += 1
set g e
sub g b
jnz g -8   # JNZ g, B  Until e == b
sub d -1   # d += 1
set g d
sub g b
jnz g -13  # JNZ g, C   until d == b
jnz f 2    # JNZ f, D
sub h -1   # h += 1, executed once per main loop if b not prime
set g b    # 
sub g c
jnz g 2    # Exit when b == c
jnz 1 3    # JUMP EXIT
sub b -17  # Only place B is is incremented, so execute main loop
           # (c - b) / 17 + 1 = 1001 times
jnz 1 -23  JUMP LOOP